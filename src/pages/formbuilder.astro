---
import Select from '../components/Select.astro';
import Input from '../components/Input.astro';
// import questions from '../data/questions.json'
import {survey} from '../data/survey2.json'
import Container from '../layouts/Container.astro';
import Layout from '../layouts/Layout.astro';
import Textarea from '../components/Textarea.astro';
import Button from '../components/Button.astro';

const questions = survey.questions
---


<Layout title="Form Builder - Alpinejs Examples">
    <div class="flex flex-col items-center w-full">
        <Container x-data={JSON.stringify({questions: questions})}>
            <div class="flex flex-row">
                <div class="flex flex-col">
                    <template x-for="question in questions" :key="question.id">
                        <div class="p-3 w-full max-w-[50rem] bg-white bg-opacity-50 shadow mx-2 mb-8" :data-id="question.id">
                            <div class="flex gap-2">
                                <h3 class="w-full text-xl font-bold" x-text="question.headline"></h3>
                                <div><Select x-model="question.type" options={['openText', 'multipleChoiceSingle', 'multipleChoiceMulti', 'nps', 'rating', 'cta', 'consent']} /></div>
                                <Button @click="questions = questions.filter((obj) => obj.id !== question.id)">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M4 7l16 0"></path>
                                        <path d="M10 11l0 6"></path>
                                        <path d="M14 11l0 6"></path>
                                        <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                        <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                    </svg>
                                </Button>
                            </div>

                            <!-- Config -->
                            <div class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">Question: </label> <Input x-model="question.headline"  /></div>
                            <div x-show="true || ['openText', 'multipleChoiceMulti', 'multipleChoiceSingle', 'nps', 'rating '].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">Description: </label> <Input x-model="question.subheader"  /></div>
                            <div x-show="['openText'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">Placeholder: </label> <Input x-model="question.placeholder"  /></div>
                            <div x-show="['multipleChoiceSingle', 'multipleChoiceMulti'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">Options: </label>
                                <ul class="flex flex-col gap-1 mb-1">
                                    <template x-for="choice in (question.choices ||= [])" :key="choice.id">
                                        <li class="flex items-center gap-1">
                                            <Input x-model="choice.label" />
                                            <button @click="question.choices = question.choices.filter((obj) => obj.id !== choice.id)">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                                    <path d="M4 7l16 0"></path>
                                                    <path d="M10 11l0 6"></path>
                                                    <path d="M14 11l0 6"></path>
                                                    <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                                    <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                                </svg>
                                            </button>
                                        </li>
                                    </template>
                                </ul>
                                <Button @click="question.choices.push({id: crypto.randomUUID(), label: ''})">+ Add Option</Button>
                            </div>
                            <div x-show="['multipleChoiceSingle', 'multipleChoiceMulti'].includes(question.type)" class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">shuffleOption: </label> <Select x-model="question.shuffleOption" options={['', 'exceptLast', 'all', 'none']} /></div>
                            <div x-show="['rating'].includes(question.type)" class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">scale: </label> <Select x-model="question.scale" options={['', 'star', 'smiley', 'number']} /></div>
                            <div x-show="['rating'].includes(question.type)" class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">range: </label> <Select x-model="question.range"  options={[5, 3, 4, 7, 10]} /></div>
                            <div x-show="['nps', 'rating'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">lowerLabel: </label> <Input x-model="question.lowerLabel"  /></div>
                            <div x-show="['nps', 'rating'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">upperLabel: </label> <Input x-model="question.upperLabel"  /></div>
                            <div x-show="['cta', 'consent'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">html: </label> <Textarea x-model="question.html" class="w-[30rem] h-[20rem]"></Textarea></div>
                            <div x-show="['cta'].includes(question.type)" class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">buttonExternal: </label> <Select x-model="question.buttonExternal" options={['true', 'false']} /></div>
                            <div x-show="['openText', 'multipleChoiceSingle', 'multipleChoiceMulti', 'nps', 'cta', 'consent', 'rating'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">Button Label: </label> <Input x-model="question.buttonLabel"  /></div>
                            <div x-show="['cta'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">buttonUrl: </label> <Input x-model="question.buttonUrl"  /></div>
                            <div x-show="['consent'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">label: </label> <Input x-model="question.label" /></div>
                            <div x-show="['consent'].includes(question.type)" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">dismissButtonLabel: </label> <Input x-model="question.dismissButtonLabel" /></div>

                            <!-- Advanced -->
                            <div x-show="false" class="mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">backButtonLabel: </label> <Input x-model="question.backButtonLabel"  /></div>
                            <div x-show="false" class="mt-3" x-transition.duration.250ms.opacity class="py-1">
                                <label class="font-semibold">Logic Jumps: </label>
                                <ul class="flex flex-col gap-1 mb-1">
                                    <template x-for="(rule, idx) in question.logic">
                                        <li class="flex items-center gap-1">
                                            <div class="w-[20rem]">If this answer</div>
                                            <Select
                                            x-model="rule.condition"
                                            options={['includesAll', 'includesOne', 'equals', 'submitted', 'lessThan']}
                                            />
                                            <Input x-model="rule.value" />
                                            <div class="w-[20rem]">jump to</div>
                                            <Input x-model="rule.destination" />
                                            <button @click="question.logic.splice(idx, 1)">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                                    <path d="M4 7l16 0"></path>
                                                    <path d="M10 11l0 6"></path>
                                                    <path d="M14 11l0 6"></path>
                                                    <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
                                                    <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
                                                </svg>
                                            </button>
                                        </li>
                                    </template>
                                </ul>
                                <Button @click="(question.logic ||= []).push({})">+ Add Jump</Button>
                            </div>

                            <!-- Bottom -->
                            <div x-show="['openText'].includes(question.type)" class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">longAnswer: </label> <Select x-model="question.longAnswer" options={['true', 'false']} /></div>
                            <div class="flex items-center gap-2 mt-3" x-transition.duration.250ms.opacity class="py-1"><label class="font-semibold">required: </label> <Select x-model="question.required" options={['true', 'false']} /></div>





                        </div>
                    </template>
                    <Button @click="questions.push({id: crypto.randomUUID(), choices: [], logic: []})">+ Add Question</Button>
                </div>
                <div>
                    <pre class="w-[35rem] break-words whitespace-pre-wrap" x-text="JSON.stringify(questions, null, 2)">
                    </pre>
                </div>

        </Container>
    </div>
</Layout>

<script>
    import Alpine from 'https://esm.sh/alpinejs@3.13.0'

    // import plugins from '/plugins.js?url'
    // Alpine.plugin(plugins)

    // import focus from 'https://esm.sh/@alpinejs/focus@3.13.1'

    // Alpine.plugin(focus)

    // window.toggleDarkMode = () => {
    //     Alpine.store('darkMode').toggle()
    // }

    Alpine.start()
</script>

<style is:global>
    [x-cloak] {display: none;}

    button:not(:disabled),
    [type="button"]:not(:disabled),
    [type="reset"]:not(:disabled),
    [type="submit"]:not(:disabled),
    .btn {
        cursor: default;
    }

    /* .btn {
        @apply px-4 py-2 font-semibold text-white bg-indigo-600 rounded select-none disabled:bg-stone-500 hover:bg-indigo-500 disabled:hover:bg-stone-500 disabled:text-stone-100 active:bg-indigo-700 focus:outline-none focus:ring focus:ring-indigo-300;
    } */

    /* bg-gradient-to-br from-green-200 via-green-400 to-green-500
	input::before {
		@apply absolute left-0 top-1/2 block h-4 w-4 -translate-y-1/2 rounded-[4px] border border-astro-gray-500;
		content: "";
	}

	input:checked::before {
		@apply bg-blue-purple-gradient;
	}

	input:checked::after {
		@apply absolute left-0 top-1/2 block h-4 w-4 -translate-y-1/2 bg-center bg-no-repeat;
		content: "";
		background-image: url("data:image/svg+xml;utf-8,<svg width='10' height='8' viewBox='0 0 10 8' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M9.04731 1.01279C9.34958 1.296 9.36503 1.77062 9.08182 2.07289L4.19342 7.29032C3.77774 7.73398 3.07363 7.73398 2.65795 7.29032L1.01279 5.53443C0.729585 5.23216 0.745038 4.75754 1.04731 4.47433C1.34958 4.19112 1.8242 4.20658 2.1074 4.50884L3.42568 5.91586L7.98721 1.04731C8.27042 0.745037 8.74504 0.729585 9.04731 1.01279Z' fill='white'/></svg>");
	} */
</style>